version: "3"
volumes:
  postgres_data:
      driver: local

services:
  nginx:
    build:
      context: ./etc/nginx-image
      dockerfile: Dockerfile.nginx.dev
    image: nginx:latest
    ports:
      - "127.0.0.1:80:80"
    depends_on:
      - node1
      - node2
      - keycloak
    command:
      - sh
      - -c
      - |
        echo 'Waiting keycloak'
        wait-for keycloak:8080 -t 600 -- echo "Keycloak is up"
        echo 'Waiting for CA node'
        wait-for node1:8080 -t 600 -- echo "Node is up"
        echo 'Waiting for CB node'
        wait-for node2:8080 -t 600 -- echo "Node is up"
        nginx-debug -g 'daemon off;'
    volumes:
      - "${PWD}/etc/nginx/nginx.conf:/etc/nginx/nginx.conf"
      - "${PWD}/etc/nginx/snippets/api.cors.conf:/etc/nginx/snippets/api.cors.conf"        
      - "${PWD}/etc/nginx/conf.d:/etc/nginx/conf.d:rw"
    networks:
      default:
        aliases:
          - keycloak.test
          - ca.node.test
          - cb.node.test
  node1:
    build:
      context: .
      dockerfile: EidasNode.Dockerfile
    image: digigov-eidas:latest
    environment:
      EIDAS_CONFIG_REPOSITORY: "/usr/local/tomcat/conf/tomcat/"
      SPECIFIC_CONNECTOR_CONFIG_REPOSITORY: "/usr/local/tomcat/conf/tomcat/specificConnector/"
      SPECIFIC_PROXY_SERVICE_CONFIG_REPOSITORY: "/usr/local/tomcat/conf/tomcat/specificProxyService/"
      SP_CONFIG_REPOSITORY: "/usr/local/tomcat/conf/tomcat/sp/"
      IDP_CONFIG_REPOSITORY: "/usr/local/tomcat/conf/tomcat/idp/"
      LOG_HOME: "/usr/local/tomcat/logs"
    ports:
      - 8080:8080
      - 8000:8000
    volumes:
      - ./etc/config-ca/tomcat:/usr/local/tomcat/conf/tomcat
      - ./etc/config-ca/keystore:/usr/local/tomcat/conf/keystore
  node2:
    build:
      context: .
      dockerfile: EidasNode.Dockerfile
    image: digigov-eidas:latest
    environment:
      EIDAS_CONFIG_REPOSITORY: "/usr/local/tomcat/conf/tomcat/"
      SPECIFIC_CONNECTOR_CONFIG_REPOSITORY: "/usr/local/tomcat/conf/tomcat/specificConnector/"
      SPECIFIC_PROXY_SERVICE_CONFIG_REPOSITORY: "/usr/local/tomcat/conf/tomcat/specificProxyService/"
      SP_CONFIG_REPOSITORY: "/usr/local/tomcat/conf/tomcat/sp/"
      IDP_CONFIG_REPOSITORY: "/usr/local/tomcat/conf/tomcat/idp/"
      LOG_HOME: "/usr/local/tomcat/logs"
    ports:
      - 8081:8080
      - 8001:8000
    volumes:
      - ./etc/config-cb/tomcat:/usr/local/tomcat/conf/tomcat
      - ./etc/config-cb/keystore:/usr/local/tomcat/conf/keystore
  keycloak:
    image: quay.io/keycloak/keycloak:15.0.2
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      PROXY_ADDRESS_FORWARDING: "true"
      # REDIRECT_SOCKET: "proxy-https"
      KEYCLOAK_FRONTEND_URL: http://keycloak.test/auth
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "ssl=true"
    ports:
      - 8085:8080
    depends_on:
      - postgres
    volumes:
      - ./etc/keycloak/deployments:/opt/jboss/keycloak/standalone/deployments/
      - ./etc/keycloak/disable-theme-cache.cli:/opt/jboss/startup-scripts/disable-theme-cache.cli 
  postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password

